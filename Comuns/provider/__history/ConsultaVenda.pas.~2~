unit ConsultaVenda;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.StdCtrls, Vcl.Grids,
  Vcl.DBGrids, Vcl.ComCtrls, Data.Win.ADODB, Vcl.ExtCtrls, Vcl.Buttons,
  FrameToolBar, Vcl.Mask, Vcl.DBCtrls;

type
  TFormConsultaVenda = class(TForm)
    PagListagem: TPageControl;
    ts1: TTabSheet;
    lblTitulo: TLabel;
    dbgrd1: TDBGrid;
    Pesquisa: TEdit;
    chkTodos: TCheckBox;
    Todos: TCheckBox;
    Timer: TTimer;
    QueryListagem: TADOQuery;
    DSQueryListagem: TDataSource;
    ConsultaVendas: TADOQuery;
    Manutencao: TTabSheet;
    FrameBtn: TFrmFrameToolBar;
    lbl2: TLabel;
    DBNomeCliente: TDBEdit;
    lbl4: TLabel;
    DBValTotal: TDBEdit;
    lbl8: TLabel;
    DBValUnitario: TDBEdit;
    Label1: TLabel;
    DBQuant: TDBEdit;
    lbl6: TLabel;
    pnlNomeCliente: TPanel;
    DBEdit1: TDBEdit;
    PnlDescproduto: TPanel;
    DSConsultaVendas: TDataSource;
    GridVenda: TDBGrid;
    Vendas: TADOQuery;
    DSVendas: TDataSource;
    QueryListagemCodVenda: TIntegerField;
    QueryListagemDatVenda: TDateTimeField;
    QueryListagemCodCliente: TIntegerField;
    QueryListagemNome: TWideStringField;
    QueryListagemCodUsuario: TIntegerField;
    QueryListagemNome_1: TWideStringField;
    QueryListagemMetodoPagamento: TWideStringField;
    QueryListagemTotVenda: TBCDField;
    ConsultaVendasCodVenda: TIntegerField;
    ConsultaVendasSeqItensVenda: TAutoIncField;
    ConsultaVendasCodCliente: TIntegerField;
    ConsultaVendasNome: TWideStringField;
    ConsultaVendasCodProduto: TIntegerField;
    ConsultaVendasDescProduto: TStringField;
    ConsultaVendasQuant: TIntegerField;
    ConsultaVendasValUnitario: TBCDField;
    ConsultaVendasValTot: TBCDField;
    VendasCodVenda: TIntegerField;
    VendasSeqItensVenda: TAutoIncField;
    VendasCodCliente: TIntegerField;
    VendasCodProduto: TIntegerField;
    VendasQuant: TIntegerField;
    VendasValUnitario: TBCDField;
    VendasValTot: TBCDField;
    QueryConsulta: TADOQuery;
    procedure TimerTimer(Sender: TObject);
    procedure BtnSelecionarClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure PesquisaChange(Sender: TObject);
    procedure TodosClick(Sender: TObject);
    procedure dbgrd1TitleClick(Column: TColumn);
    procedure dbgrd1CellClick(Column: TColumn);
    procedure FormShow(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure GridVendaCellClick(Column: TColumn);
    procedure VendasAfterCancel(DataSet: TDataSet);
    procedure VendasAfterPost(DataSet: TDataSet);
    procedure VendasBeforeEdit(DataSet: TDataSet);
    procedure VendasBeforeInsert(DataSet: TDataSet);
    procedure DBQuantExit(Sender: TObject);
    procedure DBValUnitarioExit(Sender: TObject);
    procedure DBNomeClienteExit(Sender: TObject);
    procedure DBEdit1Exit(Sender: TObject);
  private
    { Private declarations }
    CampoFiltrado : string;
    ColunaFiltrada : TColumn;
  public
    { Public declarations }
  end;

var
  FormConsultaVenda: TFormConsultaVenda;

implementation

{$R *.dfm}

uses NFuncao;

procedure TFormConsultaVenda.BtnSelecionarClick(Sender: TObject);
begin
  with QueryListagem do
    begin

      Close;
      SQL.Clear;
      SQL.Add('Delete From Vendas');
      ExecSQL;
    end;


end;

procedure TFormConsultaVenda.Button1Click(Sender: TObject);
begin
  ConsultaVendas.ExecSQL;
end;

procedure TFormConsultaVenda.DBEdit1Exit(Sender: TObject);
var
  Funcao : TNFuncao;
  DescProduto: string;
begin
  if DBEdit1.Text = '' then exit;

  DescProduto := Funcao.ConsultaQuery('Produtos','DescProduto','CodProduto',DBEdit1.Text,QueryConsulta);
  if DescProduto <> '' then
    PnlDescproduto.Caption :=  DescProduto
  else
    begin
      ShowMessage('Erro Produto não encontrado Verifique');
      DBEdit1.SetFocus;
      Exit;
    end;
end;

procedure TFormConsultaVenda.dbgrd1CellClick(Column: TColumn);
begin

    ConsultaVendas.Close;
    ConsultaVendas.Parameters.ParamByName('CodVenda').Value := dbgrd1.DataSource.DataSet.FieldByName('CodVenda').AsInteger;
    ConsultaVendas.Open;

end;

procedure TFormConsultaVenda.dbgrd1TitleClick(Column: TColumn);
begin
  ColunaFiltrada := Column;
  if Column.Field.FieldName <> CampoFiltrado then
    begin
      CampoFiltrado := Column.Field.FieldName;
    end;


  if Assigned(ColunaFiltrada) then
    ColunaFiltrada.Title.Caption := StringReplace(ColunaFiltrada.Title.Caption, ' ↑', '', [rfReplaceAll]);

  if (CampoFiltrado = 'DataNascimento') or (CampoFiltrado = 'DataCriacao') then
    begin
      ColunaFiltrada := Column;
      ColunaFiltrada.Title.Caption := ColunaFiltrada.Title.Caption;
      lblTitulo.Caption := 'Pesquisar: ' +Column.Title.Caption;
      lblTitulo.Width := lblTitulo.Canvas.TextWidth(lblTitulo.Caption);
      //DateEdit1.Left := lblTitulo.Left + lblTitulo.Width + 10;
      //DateEdit1.Width := 122;
      Pesquisa.Visible := false;
      //DateEdit1.Visible := true;
      dbgrd1.Invalidate;
    end
  else
    begin
      ColunaFiltrada := Column;
      ColunaFiltrada.Title.Caption := ColunaFiltrada.Title.Caption;
      lblTitulo.Caption := 'Pesquisar: ' +Column.Title.Caption;
      lblTitulo.Width := lblTitulo.Canvas.TextWidth(lblTitulo.Caption);
      Pesquisa.Left := lblTitulo.Left + lblTitulo.Width + 10;
      Pesquisa.Width := 469;
      //DateEdit1.Visible := false;
      Pesquisa.Visible := true;
      dbgrd1.Invalidate;
    end;
end;

procedure TFormConsultaVenda.DBNomeClienteExit(Sender: TObject);
var
  Funcao : TNFuncao;
  NomeCliente: string;
begin
  if DBNomeCliente.Text = '' then exit;

  NomeCliente := Funcao.ConsultaQuery('Clientes','Nome','CodCliente',DBNomeCliente.Text,QueryConsulta);
  if NomeCliente <> '' then
    pnlNomeCliente.Caption :=  NomeCliente
  else
    begin
      ShowMessage('Erro Cliente não encontrado Verifique');
      DBNomeCliente.SetFocus;
      Exit;
    end;

end;

procedure TFormConsultaVenda.DBQuantExit(Sender: TObject);
var
  xSoma : Double;
begin
    xSoma := StrToFloat(DBQuant.Text) * Vendas.FieldByName('ValUnitario').AsFloat;
    Vendas.FieldByName('ValTot').AsFloat := xSoma;
end;

procedure TFormConsultaVenda.DBValUnitarioExit(Sender: TObject);
var
  xSoma : Double;
begin
    xSoma := Vendas.FieldByName('ValUnitario').AsInteger * StrToFloat(DBValUnitario.Text);
    Vendas.FieldByName('ValTot').AsFloat := xSoma;
end;

procedure TFormConsultaVenda.GridVendaCellClick(Column: TColumn);
var
  Fucao : TNFuncao;
begin
  Vendas.Close;
  Vendas.Parameters.ParamByName('SeqItensVenda').Value := GridVenda.DataSource.DataSet.FieldByName('SeqItensVenda').AsInteger;
  Vendas.Open;

  pnlNomeCliente.Caption := Fucao.ConsultaQuery('Clientes','Nome','CodCliente',
  IntToStr(Vendas.FieldByName('CodCliente').AsInteger),QueryConsulta);

  PnlDescproduto.Caption := Fucao.ConsultaQuery('Produtos','DescProduto','CodProduto',
  IntToStr(Vendas.FieldByName('CodProduto').AsInteger),QueryConsulta);

end;

procedure TFormConsultaVenda.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  Action := CaFree;
  Release;
  FormConsultaVenda := nil;
end;

procedure TFormConsultaVenda.FormShow(Sender: TObject);
begin
  PagListagem.ActivePageIndex := 0;
end;

procedure TFormConsultaVenda.PesquisaChange(Sender: TObject);
begin
  Timer.Enabled := false;
  Timer.Enabled := true;
end;

procedure TFormConsultaVenda.TimerTimer(Sender: TObject);
begin
  Timer.Enabled := false;

  if Todos.Checked then
    begin
      QueryListagem.Close;
      QueryListagem.SQL.Clear;
      QueryListagem.SQL.Add('select Vendas.CodVenda,Vendas.DatVenda,Vendas.CodCliente,Clientes.Nome,Vendas.CodUsuario,Usuarios.Nome,Vendas.MetodoPagamento,Vendas.TotVenda from Vendas'+
      ' left outer join Usuarios on Vendas.CodUsuario = Usuarios.CodUsuario'+
      ' left outer join Clientes on Vendas.CodCliente = Clientes.CodCliente');

      QueryListagem.Open;
    end
  else
    begin
      if (Pesquisa.Text <> '')  then
        begin
          QueryListagem.Close;
          QueryListagem.SQL.Clear;
          QueryListagem.SQL.Add('select Vendas.CodVenda,Vendas.DatVenda,Vendas.CodCliente,Clientes.Nome,Vendas.CodUsuario,Usuarios.Nome,Vendas.MetodoPagamento,Vendas.TotVenda from Vendas'+
      ' left outer join Usuarios on Vendas.CodUsuario = Usuarios.CodUsuario'+
      ' left outer join Clientes on Vendas.CodCliente = Clientes.CodCliente where (1=1)');

        if CampoFiltrado = 'CodVenda' then
          QueryListagem.SQL.Add(' and Vendas.CodVenda = '+Pesquisa.Text+'')

        else if CampoFiltrado = 'DatVenda' then
          QueryListagem.SQL.Add(' and Vendas.DatVenda = '+Pesquisa.Text+'')

        else if CampoFiltrado = 'Nome' then
          QueryListagem.SQL.Add(' and Clientes.Nome like ''%'+Pesquisa.Text+'%''')

        else if CampoFiltrado = 'Nome_1' then
          QueryListagem.SQL.Add(' and Usuarios.Nome like ''%'+Pesquisa.Text+'%''')

        else if CampoFiltrado = 'MetodoPagamento' then
          QueryListagem.SQL.Add(' and Vendas.MetodoPagamento like ''%'+Pesquisa.Text+'%''')

        else if CampoFiltrado = 'TotVenda' then
          QueryListagem.SQL.Add(' and Vendas.TotVenda = '+Pesquisa.Text+'');

        QueryListagem.Open;
        end;


    end;
end;

procedure TFormConsultaVenda.TodosClick(Sender: TObject);
begin
  Timer.Enabled := false;
  Timer.Enabled := true;
end;

procedure TFormConsultaVenda.VendasAfterCancel(DataSet: TDataSet);
var
  i : integer;
begin
for i := 0 to PagListagem.PageCount - 1 do
  begin
    PagListagem.Pages[i].TabVisible := True; // Torna a aba visível
  end;

  FrameBtn.BtnEditar.Enabled := true;
  FrameBtn.BtnInserir.Enabled := true;
  FrameBtn.BtnExcluir.Enabled := true;

  //Cancela os Enabled dos Campos
  DBNomeCliente.Enabled := false;
  DBEdit1.Enabled := false;
  DBQuant.Enabled := false;
  DBValUnitario.Enabled := false;
  DBValTotal.Enabled := false;

end;

procedure TFormConsultaVenda.VendasAfterPost(DataSet: TDataSet);
var
  i : integer;
begin
for i := 0 to PagListagem.PageCount - 1 do
  begin
    PagListagem.Pages[i].TabVisible := True; // Torna a aba visível
  end;

  FrameBtn.BtnEditar.Enabled := true;
  FrameBtn.BtnInserir.Enabled := true;
  FrameBtn.BtnExcluir.Enabled := true;

  //Cancela os Enabled dos Campos
  DBNomeCliente.Enabled := false;
  DBEdit1.Enabled := false;
  DBQuant.Enabled := false;
  DBValUnitario.Enabled := false;
  DBValTotal.Enabled := false;
end;

procedure TFormConsultaVenda.VendasBeforeEdit(DataSet: TDataSet);
var
  i : integer;
begin

  for i := 0 to PagListagem.PageCount - 1 do
  begin
    // Esconde todas as abas, exceto a que foi passada como parâmetro
    PagListagem.Pages[i].TabVisible := PagListagem.Pages[i] = Manutencao;
  end;

  FrameBtn.BtnInserir.Enabled := false;
  FrameBtn.BtnExcluir.Enabled := false;

  //Libera os Enabled dos Campos
  DBNomeCliente.Enabled := true;
  DBEdit1.Enabled := true;
  DBQuant.Enabled := true;
  DBValUnitario.Enabled := true;
  DBValTotal.Enabled := true;

end;

procedure TFormConsultaVenda.VendasBeforeInsert(DataSet: TDataSet);
var
  i : integer;
begin

  for i := 0 to PagListagem.PageCount - 1 do
  begin
    // Esconde todas as abas, exceto a que foi passada como parâmetro
    PagListagem.Pages[i].TabVisible := PagListagem.Pages[i] = Manutencao;
  end;

  FrameBtn.BtnInserir.Enabled := false;
  FrameBtn.BtnExcluir.Enabled := false;

  //Libera os Enabled dos Campos
  DBNomeCliente.Enabled := true;
  DBEdit1.Enabled := true;
  DBQuant.Enabled := true;
  DBValUnitario.Enabled := true;
  DBValTotal.Enabled := true;

end;

end.
